# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

GET     /usuarios                   controllers.UsuarioController.getUsuarios(request: Request)
GET     /usuarios/:id               controllers.UsuarioController.getUsuario(request: Request, id: Long)
POST    /usuarios                   controllers.UsuarioController.crearUsuario(request: Request)
PATCH   /usuarios/password          controllers.UsuarioController.updateUserPass(request: Request)

GET     /ingredientes               controllers.IngredienteController.getIngredientes(request: Request)
GET     /ingredientes/:id           controllers.IngredienteController.getIngrediente(request: Request, id: Long)
POST    /ingredientes               controllers.IngredienteController.crearIngrediente(request: Request)
PATCH   /ingredientes/:id           controllers.IngredienteController.updateNombre(request: Request, id: Long)

GET     /recetas                    controllers.RecetaController.getRecetas(request: Request)
GET     /recetas/:id                controllers.RecetaController.getReceta(request: Request, id: Long)
DELETE  /recetas/:id                controllers.RecetaController.deleteReceta(request: Request, id: Long)
DELETE  /recetas/autor              controllers.RecetaController.deleteRecetasAutor(request: Request)
POST    /recetas                    controllers.RecetaController.postReceta(request: Request)
PATCH   /recetas/:id                controllers.RecetaController.patchReceta(request: Request, id: Long)
# Meter tests

GET     /reviews/autor/:id          controllers.ReviewController.getReviewsAutor(request: Request, id: Long)
GET     /reviews/receta/:id         controllers.ReviewController.getReviewsRecipe(request: Request, id: Long)
GET     /reviews/autor/:autorId/:recetaId  controllers.ReviewController.getReviewByAuthorAndRecipe(request: Request, autorId: Long, recetaId: Long)
GET     /reviews/receta/:recetaId/:autorId controllers.ReviewController.getReviewByRecipeAndAuthor(request: Request, recetaId: Long, autorId: Long)
DELETE  /reviews/:recetaId          controllers.ReviewController.deleteReviewByRecipeAndAuthor(request: Request, recetaId: Long)
POST    /reviews/:recetaId          controllers.ReviewController.postOrUpdateReview(request: Request, recetaId: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
