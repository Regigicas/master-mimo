# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

GET     /usuarios                  controllers.UsuarioController.getUsuarios
GET     /usuarios/:id              controllers.UsuarioController.getUsuario(id: Long)
POST    /usuarios                  controllers.UsuarioController.crearUsuario
PATCH   /usuarios/:id/password     controllers.UsuarioController.updateUserPass(id: Long)

GET     /ingredientes              controllers.IngredienteController.getIngredientes
GET     /ingredientes/:id          controllers.IngredienteController.getIngrediente(id: Long)
POST    /ingredientes              controllers.IngredienteController.crearIngrediente
PATCH   /ingredientes/:id          controllers.IngredienteController.updateNombre(id: Long)

GET     /recetas                   controllers.RecetaController.getRecetas
DELETE  /recetas/:id               controllers.RecetaController.deleteReceta(id: Long)
DELETE  /recetas/autor/:id         controllers.RecetaController.deleteRecetasAutor(id: Long)
# Post y parchear recetas

GET     /reviews/autor/:id          controllers.ReviewController.getReviewsAutor(id: Long)
GET     /reviews/receta/:id         controllers.ReviewController.getReviewsRecipe(id: Long)
GET     /reviews/autor/:autorId/:recetaId controllers.ReviewController.getReviewByAuthorAndRecipe(autorId: Long, recetaId: Long)
GET     /reviews/receta/:recetaId/:autorId controllers.ReviewController.getReviewByRecipeAndAuthor(recetaId: Long, autorId: Long)
DELETE  /reviews/autor/:autorId/:recetaId  controllers.ReviewController.deleteReviewByAuthorAndRecipe(autorId: Long, recetaId: Long)
DELETE  /reviews/receta/:recetaId/:autorId controllers.ReviewController.deleteReviewByRecipeAndAuthor(recetaId: Long, autorId: Long)
# Post y parchear reviews

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
